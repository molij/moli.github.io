<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>redis on 莫离君的博客</title>
    <link>https://gongvirgil.github.io/Blog/tags/redis/</link>
    <description>Recent content in redis on 莫离君的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Fri, 25 Dec 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://gongvirgil.github.io/Blog/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>【高并发简单解决方案】redis队列缓存 &#43; mysql 批量入库 &#43; php离线整合</title>
      <link>https://gongvirgil.github.io/Blog/post/%E6%8A%80%E6%9C%AF/php/2015-12-25-redis&#43;mysql&#43;php-high-concurrence/</link>
      <pubDate>Fri, 25 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://gongvirgil.github.io/Blog/post/%E6%8A%80%E6%9C%AF/php/2015-12-25-redis&#43;mysql&#43;php-high-concurrence/</guid>
      <description>需求背景：有个调用统计日志存储和统计需求，要求存储到mysql中；存储数据高峰能达到日均千万，瓶颈在于直接入库并发太高，可能会把mysql干垮。&#xA;问题分析&#xA;思考：应用网站架构的衍化过程中，应用最新的框架和工具技术固然是最优选择；但是，如果能在现有的框架的基础上提出简单可依赖的解决方案，未尝不是一种提升自我的尝试。&#xA;解决：&#xA;问题一：要求日志最好入库；但是，直接入库mysql确实扛不住，批量入库没有问题，done。【批量入库和直接入库性能差异参考文章】 问题二：批量入库就需要有高并发的消息队列，决定采用redis list 仿真实现，而且方便回滚。 问题三：日志量毕竟大，保存最近30条足矣，决定用php写个离线统计和清理脚本。 done，下面是小拽的简单实现过程&#xA;##一：设计数据库表和存储&#xA;考虑到log系统对数据库的性能更多一些，稳定性和安全性没有那么高，存储引擎自然是只支持select insert 没有索引的archive。如果确实有update需求，也可以采用myISAM。 考虑到log是实时记录的所有数据，数量可能巨大，主键采用bigint，自增即可。 考虑到log系统以写为主，统计采用离线计算，字段均不要出现索引，因为一方面可能会影响插入数据效率，另外读时候会造成死锁，影响写数据。 ##二：redis存储数据形成消息队列&#xA;由于高并发，尽可能简单，直接，上代码。&#xA;&amp;lt;?php /*************************************************************************** * * 获取到的调用日志，存入redis的队列中. * $Id$ * **************************************************************************/ /** * @file saveLog.php * @date 2015/11/06 20:47:13 * @author:cuihuan * @version $Revision$ * @brief * **/ // 获取info $interface_info = $_GET[&#39;info&#39;]; // 存入redis队列 $redis = new Redis(); $redis-&amp;gt;connect(&#39;xx&#39;, 6379); $redis-&amp;gt;auth(&amp;quot;password&amp;quot;); // 加上时间戳存入队列 $now_time = date(&amp;quot;Y-m-d H:i:s&amp;quot;); $redis-&amp;gt;rPush(&amp;quot;call_log&amp;quot;, $interface_info . &amp;quot;%&amp;quot; . $now_time); $redis-&amp;gt;close(); /* vim: set ts=4 sw=4 sts=4 tw=100 */ ?</description>
    </item>
  </channel>
</rss>
