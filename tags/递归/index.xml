<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>递归 on 莫离君的博客</title>
    <link>https://moli.github.io/tags/%E9%80%92%E5%BD%92/</link>
    <description>Recent content in 递归 on 莫离君的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 01 Apr 2017 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://moli.github.io/tags/%E9%80%92%E5%BD%92/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>递归时内存占用问题</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/php/2017-04-01-php-recursion-memory-problem/</link>
      <pubDate>Sat, 01 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/php/2017-04-01-php-recursion-memory-problem/</guid>
      <description>若有涉及到重复操作，尽量使用循环而非递归。 每一次递归调用都将过程在内存中复制一遍，如果有大数据的局部变量则会导致内存激增。 内存分配的图示：&#xA;&amp;lt;?php //递归10次内存测试 function test($j=0,$start){ $aa = str_repeat($j,2560000); echo (memory_get_usage()-$start).&amp;#34;\r\n&amp;#34;;//依次输出：2560424 5120704 7680920 10241136 12801352 15361568 17921784 20482000 23042216 25602432 //结论：递归自身之前需要unset局部变量释放内存，否则会一直占据内存直到递归结束 $j++; if($j&amp;lt;10) test($j,$start); } function test1($j=0,$start){ $queue = array(); array_push($queue, $j); while(count($queue)&amp;lt;10){ $aa = str_repeat($j,2560000); echo (memory_get_usage()-$start).&amp;#34;\r\n&amp;#34;;//依次输出：2560856 2561120 2561320 2561520 2561720 2561920 2562120 2562320 2562584 $j++; array_push($queue, $j); } } $start = memory_get_usage(); test(0,$start); ?&amp;gt; </description>
    </item>
  </channel>
</rss>
