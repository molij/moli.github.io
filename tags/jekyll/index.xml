<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jekyll on 莫离君的博客</title>
    <link>https://gongvirgil.github.io/Blog/tags/jekyll/</link>
    <description>Recent content in Jekyll on 莫离君的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 03 Dec 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://gongvirgil.github.io/Blog/tags/jekyll/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Jekyll模板变量&amp;语法</title>
      <link>https://gongvirgil.github.io/Blog/post/%E6%8A%80%E6%9C%AF/2015-12-03-jekyll-template-grammer/</link>
      <pubDate>Thu, 03 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://gongvirgil.github.io/Blog/post/%E6%8A%80%E6%9C%AF/2015-12-03-jekyll-template-grammer/</guid>
      <description>Jekyll会遍历你的站点，来寻找需要处理的文件。&#xA;任何具有 YAML 前置数据的文件都将会被处理，每一个这样的文件，Jekyll都会通过Liquid模板系统使用许多可用的页面变量。&#xA;下面是一个可用变量的列表。&#xA;###Jekyll 目录及一些说明&#xA;文件/目录 说明 Jekyll 标准目录树 _config.yml Jekyll的配置文件 _includes include 文件所在的文件夹 _layouts 模版文件夹 _posts 自己要发布的内容 _sites 预览时产生的文件都放在该文件夹中 _includes文件夹中所放的文件是最终要放到模版中的一些代码片段。 _layouts中放的一些模版，模版是用包含page或post内容的。Jekyll的模版使用HTML语法来写，并包含YAML Front Matter。所有的模版都可用Liquid来与网站进行交互。所的的模版都可以使用全局变量site和page，site变量包含该网站所有可以接触得到的内容和元数据(meta-data)，page变量包含的是当前渲染的page或post的所有可以接触得到的数据。 _post文件夹中放的是自己要发布的post文章。post文件的命名规则为YEAR-MONTH-DATE-title.MARKUP，使用rake post会自动将post文件命名合适。而对于page，所有放在根目录下或不以下划线开头的文件夹中有格式的文件都会被Jekyll处理成page。这里说的有格式是指文件含有YAML Front Matter。所有的post和page都要用markdown或者texile或者HTML语法来写，并可以包含Liquid模版的语法。还要有 YAML Front Matter (Jekyll只处理具有YAML Front Matter的文件)。YAML Front Matter必须放在文件的开头，一对&amp;mdash;之间，用户可在这一对&amp;mdash;间设置预先定义的变量或用户自己的数据。 ###Jekyll模板全局变量&#xA;变量 描述 site.time 当前的时间(当你运行Jekyll时的时间) site.posts 一个按时间逆序的文章列表。 site.related_posts 如果当前被处理的页面是一个文章文件，那这个变量是一个包含了最多10篇相关文章的列表。默认来说，这些相关文章是低质量但计算快的。为了得到高质量但计算慢的结果，运行Jekyll命令时可以加上&amp;ndash;lsi选项。(潜在语意索引) site.categories.CATEGORY 所有在CATEGORY分类中的文章列表 site.tags.TAG 所有拥有TAG标签的文章的列表 site.[CONFIGURATION_DATA] 截止0.5.2版本，所有在_config.yml中的数据都能够通过site变量调用。举例来说，如果你有一个这样的选项在你的配置文件中:url: http://higrid.net，那在文章和页面文件中可以这样调用{ { site.url } }。Jekyll并不会自动解析修改过的_config.yml文件，你想要启用新的设置选项，你需要重启Jekyll ###Jekyll模板Page变量&#xA;变量 描述 page.content 页面中未渲染的内容 page.title 文章的标题 page.url 除去域名以外的URL，例子:/2013/12/14/higrid-net.html page.date 指定每一篇文章的时间，这个选项能够覆盖一篇文章中前置数据设置的时间，它的格式是这样的:YYYY-MM-DD HH:MM:SS page.</description>
    </item>
    <item>
      <title>安装Jekyll</title>
      <link>https://gongvirgil.github.io/Blog/post/%E6%8A%80%E6%9C%AF/2015-01-01-jekyll/</link>
      <pubDate>Mon, 19 Jan 2015 00:00:00 +0000</pubDate>
      <guid>https://gongvirgil.github.io/Blog/post/%E6%8A%80%E6%9C%AF/2015-01-01-jekyll/</guid>
      <description>##安装ruby环境 安装Jekyll，下载地址：[http://rubyinstaller.org/downloads/][]&#xA;##下载DevKit并解压 DevKit 是 windows 平台下编译和使用本地 C/C++ 扩展包的工具。它就是用来模拟 Linux 平 台下的 make,gcc,sh 来进行编译。但是这个方法目前仅支持通过 RubyInstaller 安装的 Ruby 。 下载地址：http://rubyinstaller.org/downloads/&#xA;##git下安装Devkit&#xA;###3.1&#xA;git下（cmd下各种问题）进入Devkit解压的目录，执行以下命令&#xA;####3.1.1&#xA;$ Ruby dk.rb init $ Ruby dk.rb install 如果config.yml有报错，找到这个文件，按里面的说明添加两行路径&#xA;- E:\Ruby21-x64 - E:\Ruby21-x64 ####3.1.2&#xA;$ ruby -v 出现版本号，证明安装成功&#xA;###3.2&#xA;$ Gem install Jekyll 这一步安装Jekyll，由于天朝网络的关系，可能会出现Unable to download data的错误，解决方法：&#xA;$ gem sources --remove https://rubygems.org/ $ gem sources -a https://ruby.taobao.org/ $ gem sources -l *** CURRENT SOURCES *** https://ruby.taobao.org （请确保只有 ruby.</description>
    </item>
  </channel>
</rss>
