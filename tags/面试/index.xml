<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>面试 on 莫离君的博客</title>
    <link>https://moli.github.io/tags/%E9%9D%A2%E8%AF%95/</link>
    <description>Recent content in 面试 on 莫离君的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 30 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://moli.github.io/tags/%E9%9D%A2%E8%AF%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>面试中遇到的一些问题总结</title>
      <link>https://moli.github.io/post/%E8%8D%89%E7%A8%BF/2016-03-30-some-questions-met/</link>
      <pubDate>Wed, 30 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E8%8D%89%E7%A8%BF/2016-03-30-some-questions-met/</guid>
      <description>Linux 常用的一些命令 cd ls grep find cp/mv/rm ps kill file tar cat chgrp/chown/chmod vim time df mysql 数据库的索引认知 http://www.tuicool.com/articles/ZRN3qu&#xA;PHP的MVC实现原理分析 MVC三个字母的含义： M：Model 模型，负责数据库操作。 V：View 视图，负责调用Model调取数据，再调用模板，展示出最终效果。 C：Controller 控制器，程序的入口，决定改调用哪个View，并告诉View该做什么。 下面是一个超级简单的MVC结构实现：&#xA;Controller.php include &#39;Model.php&#39;; include &#39;View.php&#39;; class Controller { private $model = &#39;&#39;; private $view = &#39;&#39;; public function Controller(){ $this-&amp;gt;model = new Model(); $this-&amp;gt;view = new View(); } public function doAction( $method = &#39;defaultMethod&#39;, $params = array() ){ if( empty($method) ){ $this-&amp;gt;defaultMethod(); }else if( method_exists($this, $method) ){ call_user_func(array($this, $method), $params); }else{ $this-&amp;gt;nonexisting_method(); } } public function link_page($name = &#39;&#39;){ $links = $this-&amp;gt;model-&amp;gt;getLinks(); $this-&amp;gt;view-&amp;gt;display($links); $result = $this-&amp;gt;model-&amp;gt;getResult($name); $this-&amp;gt;view-&amp;gt;display($result); } public function defaultMethod(){ $this-&amp;gt;br(); echo &amp;quot;This is the default method.</description>
    </item>
  </channel>
</rss>
