<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>笔记 on 莫离君的博客</title>
    <link>https://moli.github.io/tags/%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 笔记 on 莫离君的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 08 Dec 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://moli.github.io/tags/%E7%AC%94%E8%AE%B0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>jQuery插件开发笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/jquery/2014-12-08-jquery-plugin/</link>
      <pubDate>Tue, 08 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/jquery/2014-12-08-jquery-plugin/</guid>
      <description>jQuery插件的开发包括两种：&#xA;一种是类级别的插件开发，即给jQuery添加新的全局函数，相当于给jQuery类本身添加方法。jQuery的全局函数就是属于jQuery命名空间的函数。 另一种是对象级别的插件开发，即给jQuery对象添加方法。下面就两种函数的开发做详细的说明。 类级别的插件开发 类级别的插件开发最直接的理解就是给jQuery类添加类方法，可以理解为添加静态方法。典型的例子就是$.AJAX()这个函数，将函数定义于jQuery的命名空间中。关于类级别的插件开发可以采用如下几种形式进行扩展：&#xA;添加一个新的全局函数 添加一个全局函数，我们只需如下定义：&#xA;jQuery.foo = function() { alert(&#39;This is a test. This is only a test.&#39;); }; 增加多个全局函数 添加多个全局函数，可采用如下定义：&#xA;jQuery.foo = function() { alert(&#39;This is a test. This is only a test.&#39;); }; jQuery.bar = function(param) { alert(&#39;This function takes a parameter, which is &amp;quot;&#39; + param + &#39;&amp;quot;.&#39;); }; 调用时和一个函数的一样的:jQuery.foo();jQuery.bar();或者$.foo();$.bar(&#39;bar&#39;); 使用jQuery.extend(object);　jQuery.extend({ foo: function() { alert(&#39;This is a test. This is only a test.&#39;); }, bar: function(param) { alert(&#39;This function takes a parameter, which is &amp;quot;&#39; + param +&#39;&amp;quot;.</description>
    </item>
    <item>
      <title>执行系统命令的函数</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/2015-12-06-shell-method-terminal/</link>
      <pubDate>Sun, 06 Dec 2015 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/2015-12-06-shell-method-terminal/</guid>
      <description>system, exec, passthru, shell_exec 这4个函数可用于执行系统命令。每个的行为都有细微差别。问题在于, 当在共享主机中, 某些函数可能被选择性的禁用. 大多数新手趋于每次首先检查哪个函数可用, 然而再使用它。更好的方案是封成函数一个可跨平台的函数。&#xA;/** Method to execute a command in the terminal Uses : 1. system 2. passthru 3. exec 4. shell_exec */ function terminal($command){ //system if(function_exists(&#39;system&#39;)){ ob_start(); system($command , $return_var); $output = ob_get_contents(); ob_end_clean(); } //passthru else if(function_exists(&#39;passthru&#39;)){ ob_start(); passthru($command , $return_var); $output = ob_get_contents(); ob_end_clean(); } //exec else if(function_exists(&#39;exec&#39;)){ exec($command , $output , $return_var); $output = implode(&amp;quot;\n&amp;quot; , $output); } //shell_exec else if(function_exists(&#39;shell_exec&#39;)){ $output = shell_exec($command) ; } else{ $output = &#39;Command execution not possible on this system&#39;; $return_var = 1; } return array(&#39;output&#39; =&amp;gt; $output , &#39;status&#39; =&amp;gt; $return_var); } terminal(&#39;ls&#39;); 上面的函数將运行shell命令, 只要有一个系统函数可用, 这保持了代码的一致性。</description>
    </item>
    <item>
      <title>全部国家列表</title>
      <link>https://moli.github.io/post/%E5%85%B6%E4%BB%96/2015-11-02-all-country-list/</link>
      <pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E5%85%B6%E4%BB%96/2015-11-02-all-country-list/</guid>
      <description>联合国官方资料：&#xA;共有195个国家&#xA;亚洲 Asia -49个国家&#xA;蒙古 中国 北韩 南韩 日本 台湾 缅甸 泰国 寮国 越南 柬埔寨 马来西亚 新加坡 印尼 汶莱 东帝汶 菲律宾 巴基斯坦 印度 尼泊尔 不丹 孟加拉 斯里兰卡 马尔地夫 哈萨克 乌兹别克 土库曼 吉尔吉斯 塔吉克 阿富汗 亚塞拜然 乔治亚 亚美尼亚 伊朗 土耳其 叙利亚 伊拉克 黎巴嫩 以色列 巴勒斯坦 约旦 沙乌地阿拉伯 科威特 巴林 卡达 阿拉伯联合大公国 阿曼 叶门 塞浦路斯&#xA;欧洲 Europe -43个国家&#xA;芬兰 瑞典 挪威 丹麦 冰岛 俄罗斯 爱沙尼亚 拉脱维亚 立陶宛 白俄罗斯 乌克兰 摩尔多瓦 波兰 捷克 斯洛伐克 匈牙利 罗马尼亚 保加利亚 斯洛维尼亚 克罗埃西亚 波士尼亚 塞尔维亚 马其顿 阿尔巴尼亚 德国 瑞士 列支敦斯登 奥地利 荷兰 比利时 卢森堡 法国 安道尔 摩纳哥 英国 爱尔兰 希腊 义大利 圣马利诺 教廷(梵蒂冈) 西班牙 葡萄牙 马尔他</description>
    </item>
    <item>
      <title>【laravel学习笔记】一、安装</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/laravel/2015-09-01-laravel-build/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/laravel/2015-09-01-laravel-build/</guid>
      <description>Windows下安装 一、安装前的准备工作 1. PHP环境配置 2. 安装Composer 二、安装laravel 三、配置本地虚拟域名 参考这里：</description>
    </item>
    <item>
      <title>【laravel学习笔记】二、路由、控制器及视图简介</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/laravel/2015-09-11-laravel-route-controller-view/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/laravel/2015-09-11-laravel-route-controller-view/</guid>
      <description>##路由 Laravel应用的 大多数路由都将在 app/Http/routes.php 中定义，大多数基本的 Laravel 路由都只接受一个 URI 和 一个 闭包(Closure) 参数。下面是一个简单的GET路由：&#xA;Route::get(&#39;/&#39;, &#39;WelcomeController@index&#39;); Route : 声明一个路由 get : 定义一个GET路由，除get外，还有post、put、delete路由; / : URL路径 WelcomeController@index : 控制器@方法 该路由是用户访问根目录 / 时，执行控制器WelcomeController中的index方法。&#xA;##控制器 上面路由调用控制器 app/Http/Controllers/WelcomeController.php中的index()方法：&#xA;&amp;lt;?php namespace App\Http\Controllers; class WelcomeController extends Controller { public function index(){ return view(&#39;welcome&#39;); } } </description>
    </item>
    <item>
      <title>bootstrap笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/bootstrap/2015-03-26-bootstrap/</link>
      <pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/bootstrap/2015-03-26-bootstrap/</guid>
      <description>##简介&#xA;##基本页面HTML：[demo戳这里][1]&#xA;&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;quot;zh-CN&amp;quot;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt; &amp;lt;meta http-equiv=&amp;quot;X-UA-Compatible&amp;quot; content=&amp;quot;IE=edge&amp;quot;&amp;gt; &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt; &amp;lt;title&amp;gt;Bootstrap 101 Template&amp;lt;/title&amp;gt; &amp;lt;link href=&amp;quot;http://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt; &amp;lt;!--[if lt IE 9]&amp;gt; &amp;lt;script src=&amp;quot;http://cdn.bootcss.com/html5shiv/3.7.2/html5shiv.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;http://cdn.bootcss.com/respond.js/1.4.2/respond.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;![endif]--&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;h1&amp;gt;你好，世界！&amp;lt;/h1&amp;gt; &amp;lt;script src=&amp;quot;http://cdn.bootcss.com/jquery/1.11.2/jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;http://cdn.bootcss.com/bootstrap/3.3.0/js/bootstrap.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; ##顶部导航栏 ###Static navbar&#xA;&amp;lt;nav class=&amp;quot;navbar navbar-default navbar-static-top&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;navbar-header&amp;quot;&amp;gt; &amp;lt;button type=&amp;quot;button&amp;quot; class=&amp;quot;navbar-toggle collapsed&amp;quot; data-toggle=&amp;quot;collapse&amp;quot; data-target=&amp;quot;#navbar&amp;quot; aria-expanded=&amp;quot;false&amp;quot; aria-controls=&amp;quot;navbar&amp;quot;&amp;gt; &amp;lt;span class=&amp;quot;sr-only&amp;quot;&amp;gt;Toggle navigation&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;span class=&amp;quot;icon-bar&amp;quot;&amp;gt;&amp;lt;/span&amp;gt; &amp;lt;/button&amp;gt; &amp;lt;a class=&amp;quot;navbar-brand&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;Project name&amp;lt;/a&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div id=&amp;quot;navbar&amp;quot; class=&amp;quot;navbar-collapse collapse&amp;quot;&amp;gt; &amp;lt;ul class=&amp;quot;nav navbar-nav&amp;quot;&amp;gt; &amp;lt;li class=&amp;quot;active&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Home&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#about&amp;quot;&amp;gt;About&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#contact&amp;quot;&amp;gt;Contact&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;dropdown&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;dropdown-toggle&amp;quot; data-toggle=&amp;quot;dropdown&amp;quot; role=&amp;quot;button&amp;quot; aria-expanded=&amp;quot;false&amp;quot;&amp;gt;Dropdown &amp;lt;span class=&amp;quot;caret&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt; &amp;lt;ul class=&amp;quot;dropdown-menu&amp;quot; role=&amp;quot;menu&amp;quot;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Another action&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Something else here&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;divider&amp;quot;&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li class=&amp;quot;dropdown-header&amp;quot;&amp;gt;Nav header&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;One more separated link&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;ul class=&amp;quot;nav navbar-nav navbar-right&amp;quot;&amp;gt; &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;.</description>
    </item>
    <item>
      <title>css笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/htmlcss/2014-01-01-css/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/htmlcss/2014-01-01-css/</guid>
      <description>背景渐变色：&#xA;background-image: linear-gradient(to right, #fff, #000 100%);&#xA;currentColor&#xA;table-css&#xA;&amp;lt;table class=&amp;quot;table&amp;quot; cellspacing=&amp;quot;0&amp;quot;&amp;gt; &amp;lt;thead&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;th width=&amp;quot;10%&amp;quot;&amp;gt;序号&amp;lt;/th&amp;gt; &amp;lt;th width=&amp;quot;20%&amp;quot;&amp;gt;游戏&amp;lt;/th&amp;gt; &amp;lt;th width=&amp;quot;20%&amp;quot;&amp;gt;区服&amp;lt;/th&amp;gt; &amp;lt;th width=&amp;quot;20%&amp;quot;&amp;gt;卡号&amp;lt;/th&amp;gt; &amp;lt;th width=&amp;quot;30%&amp;quot;&amp;gt;领取时间&amp;lt;/th&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/thead&amp;gt; &amp;lt;tbody&amp;gt; &amp;lt;volist name=&amp;quot;mycard_list&amp;quot; id=&amp;quot;vo&amp;quot; key=&amp;quot;k&amp;quot;&amp;gt; &amp;lt;tr&amp;gt; &amp;lt;td&amp;gt;{$k}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{$vo.gamename}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{$vo.servername}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{$vo.card_info}&amp;lt;/td&amp;gt; &amp;lt;td&amp;gt;{$vo.get_time|date=&amp;quot;Y-m-d H:i:s&amp;quot;,###}&amp;lt;/td&amp;gt; &amp;lt;/tr&amp;gt; &amp;lt;/volist&amp;gt; &amp;lt;/tbody&amp;gt; &amp;lt;/table&amp;gt; .table {width: 100%;margin-bottom: 20px;text-align: center;vertical-align: middle;} .table th,.table td {line-height: 20px;padding: 15px 20px;text-align: center;font-size: 14px;border: 0 none;} .table thead th {background-color: #dfdfdf;color: #fff;} .table tbody td {background-color: #fff;color: #666;} .</description>
    </item>
    <item>
      <title>jQuery笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/jquery/2014-01-01-jquery/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/jquery/2014-01-01-jquery/</guid>
      <description></description>
    </item>
    <item>
      <title>js笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/javascript/2014-01-01-js/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/javascript/2014-01-01-js/</guid>
      <description>##js简介&#xA;##点击全屏&#xA;var fullscreen=function(){ elem=document.body; if(elem.webkitRequestFullScreen){ elem.webkitRequestFullScreen(); }else if(elem.mozRequestFullScreen){ elem.mozRequestFullScreen(); }else if(elem.requestFullScreen){ elem.requestFullscreen(); }else{ //浏览器不支持全屏API或已被禁用 } } var exitFullscreen=function(){ var elem=document; if(elem.webkitCancelFullScreen){ elem.webkitCancelFullScreen(); }else if(elem.mozCancelFullScreen){ elem.mozCancelFullScreen(); }else if(elem.cancelFullScreen){ elem.cancelFullScreen(); }else if(elem.exitFullscreen){ elem.exitFullscreen(); }else{ //浏览器不支持全屏API或已被禁用 } } </description>
    </item>
    <item>
      <title>php知识笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/php/2014-01-01-php/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/php/2014-01-01-php/</guid>
      <description>##写入文件&#xA;$fp = fopen($_SERVER[&#39;DOCUMENT_ROOT&#39;].&amp;quot;/xxx.txt&amp;quot;,&amp;quot;a+&amp;quot;); fwrite($fp,date(&amp;quot;Y-m-d H:i:s&amp;quot;,time()).&amp;quot;\r\n&amp;quot;); fclose($fp); ##查找文件下所有文件名&#xA;$str = &#39;&#39;; $dir = &amp;quot;../Tpl/&amp;quot;; $preg2 = &#39;/[A-Za-z]/&#39;; if (is_dir ( $dir )) { if ($dh = opendir ( $dir )) { while ( ($file = readdir ( $dh )) !== false ) { if (preg_match ( $preg2, $file )) { $zt = &#39;&#39;; if ($info [&#39;theme&#39;] == $file) { $zt = &#39;selected&#39;; } $str .= &#39;&amp;lt;option value=&#39; . $file . &#39; &#39; .</description>
    </item>
    <item>
      <title>ThinkPHP笔记</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/thinkphp/2014-01-01-thinkphp/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/thinkphp/2014-01-01-thinkphp/</guid>
      <description>简介 ThinkPHP 是一个免费开源的，快速、简单的面向对象的 轻量级PHP开发框架 ，创立于2006年初，遵循Apache2开源协议发布，是为了敏捷WEB应用开发和简化企业应用开发而诞生的。ThinkPHP从诞生以来一直秉承简洁实用的设计原则，在保持出色的性能和至简的代码的同时，也注重易用性。并且拥有众多的原创功能和特性，在社区团队的积极参与下，在易用性、扩展性和性能方面不断优化和改进，已经成长为国内最领先和最具影响力的WEB应用开发框架，众多的典型案例确保可以稳定用于商业以及门户级的开发。&#xA;全面的WEB开发特性支持 最新的ThinkPHP为WEB应用开发提供了强有力的支持，这些支持包括：&#xA;MVC支持-基于多层模型（M）、视图（V）、控制器（C）的设计模式 ORM支持-提供了全功能和高性能的ORM支持，支持大部分数据库 模板引擎支持-内置了高性能的基于标签库和XML标签的编译型模板引擎 RESTFul支持-REST模式提供了RESTFul支持，为你打造全新的URL设计和访问体验 云引擎支持-提供了对新浪SAE平台和百度BAE平台的强力支持，具备“横跨性”和“平滑性”，支持本地化开发和调试以及部署切换，让你轻松过渡，打造全新的开发体验。 CLI支持-支持基于命令行的应用开发 AMF支持-支持Flex开发和Flash通讯，打造互联网富应用 PHPRPC支持-提供基于PHPRpc的WEBService解决方案 MongoDb支持-提供NoSQL的支持 缓存支持-提供了包括文件、数据库、Memcache、Xcache、Redis等多种类型的缓存支持 大道至简的开发理念 ThinkPHP从诞生以来一直秉承大道至简的开发理念，无论从底层实现还是应用开发，我们都倡导用最少的代码完成相同的功能，正是由于对简单的执着和代码的修炼，让我们长期保持出色的性能和极速的开发体验。在主流PHP开发框架的评测数据中表现卓越，简单和快速开发是我们不变的宗旨。&#xA;安全性 框架在系统层面提供了众多的安全特性，确保你的网站和产品安全无忧。这些特性包括：&#xA;XSS安全防护 表单自动验证 强制数据类型转换 输入数据过滤 表单令牌验证 防SQL注入 图像上传检测 商业友好的开源协议 ThinkPHP遵循Apache2开源协议发布。Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再作为开源或商业软件发布。</description>
    </item>
    <item>
      <title>各种常用的Linux操作命令</title>
      <link>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/linux/2014-01-01-linux/</link>
      <pubDate>Wed, 01 Jan 2014 00:00:00 +0000</pubDate>
      <guid>https://moli.github.io/post/%E6%8A%80%E6%9C%AF/linux/2014-01-01-linux/</guid>
      <description>##简单速记命令：&#xA;查看时间： date 更新Internet时间： ntpdate time.windows.com 重启httpd:&#x9;service httpd restart 复制文件夹下文件 cp -r /home/aaa/* /home/sss 修改权限 chmod -R 777 /home/aaa/* 删除文件 rm -rf /home/aaa/* 查看当前规则：cat /etc/sysconfig/iptables ##复杂操作笔记：&#xA;替换字符串: [戳这里][1] linux服务器之间文件传输：[戳这里][2] 打包/压缩目录：[戳这里][3] vi编辑器使用命令：[戳这里][4] ##查找目录下的所有文件中是否含有某个字符串&#xA;find .| xargs grep -ri &amp;quot;XXXX&amp;quot; ##查找目录下的所有文件中是否含有某个字符串,并且只打印出文件名&#xA;find .| xargs grep -ri &amp;quot;XXXX&amp;quot; -l service iptables stop service iptables start ##crontab定时执行任务&#xA;编辑：crontab -e&#xA;列出：crontab -l&#xA;退出编辑：ctrl+c&#xA;保存：:wp&#xA;分 时 日 月 周 命令 0 */3 * * * wget http://www.</description>
    </item>
  </channel>
</rss>
